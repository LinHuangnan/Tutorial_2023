// Generated by gencpp from file week2test/Number.msg
// DO NOT EDIT!


#ifndef WEEK2TEST_MESSAGE_NUMBER_H
#define WEEK2TEST_MESSAGE_NUMBER_H

#include <ros/service_traits.h>


#include <week2test/NumberRequest.h>
#include <week2test/NumberResponse.h>


namespace week2test
{

struct Number
{

typedef NumberRequest Request;
typedef NumberResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Number
} // namespace week2test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::week2test::Number > {
  static const char* value()
  {
    return "6dc919dc3dbcacc9c09896221084aee3";
  }

  static const char* value(const ::week2test::Number&) { return value(); }
};

template<>
struct DataType< ::week2test::Number > {
  static const char* value()
  {
    return "week2test/Number";
  }

  static const char* value(const ::week2test::Number&) { return value(); }
};


// service_traits::MD5Sum< ::week2test::NumberRequest> should match
// service_traits::MD5Sum< ::week2test::Number >
template<>
struct MD5Sum< ::week2test::NumberRequest>
{
  static const char* value()
  {
    return MD5Sum< ::week2test::Number >::value();
  }
  static const char* value(const ::week2test::NumberRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::week2test::NumberRequest> should match
// service_traits::DataType< ::week2test::Number >
template<>
struct DataType< ::week2test::NumberRequest>
{
  static const char* value()
  {
    return DataType< ::week2test::Number >::value();
  }
  static const char* value(const ::week2test::NumberRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::week2test::NumberResponse> should match
// service_traits::MD5Sum< ::week2test::Number >
template<>
struct MD5Sum< ::week2test::NumberResponse>
{
  static const char* value()
  {
    return MD5Sum< ::week2test::Number >::value();
  }
  static const char* value(const ::week2test::NumberResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::week2test::NumberResponse> should match
// service_traits::DataType< ::week2test::Number >
template<>
struct DataType< ::week2test::NumberResponse>
{
  static const char* value()
  {
    return DataType< ::week2test::Number >::value();
  }
  static const char* value(const ::week2test::NumberResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WEEK2TEST_MESSAGE_NUMBER_H
